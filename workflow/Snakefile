import os
import shutil
from snakemake.utils import min_version
from snakemake.utils import validate


# Settings --------------------------------------------------------------------

min_version("6.3.0")

shell.executable("bash")


configfile: os.path.join(workflow.basedir, "..", ".tests", "integration", "config", "config.yaml")


# Validating samples in rules/common


workdir: config["workdir"]


# Input rules ------------------------------------------------------------------


include: "rules/common.smk"


rule all:
    input:
        "aquamis/reports/summary_report.tsv",
        "geuebt_export/metadata.tsv",
        "nrls_export/sucess.flag" if config["export_nrls"] == True else "",


# Includes --------------------------------------------------------------------


include: "rules/aquamis.smk"
include: "rules/exports.smk"


# Workflow --------------------------------------------------------------------
## send notifications with onsuccess and onerror


onstart:
    print(f"\nYou are using LOCAL ASSEMBLER version: {version}")
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline started\n")


onsuccess:
    try:
        for logfile in os.listdir(".snakemake/log/"):
            shutil.move(os.path.join(".snakemake/log", logfile), "logs")
        shutil.rmtree(".snakemake", ignore_errors=True)
    except:
        # if not executing .snakemake from workdir,
        # the log file will be in execution directory
        # as far as I know, there is now way to access this form here
        pass
    print("\nWorkflow finished, no error")
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline succesfully finished\n")


onerror:
    print(
        f"\nAn error occured, please consider filing an bug report."
        f"\n"
        f"\nIssue tracker: https://github.com/NRW-GEUBT/local-assembler/issues"
    )
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline stopped on error\n")
